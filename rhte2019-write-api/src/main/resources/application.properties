# the name of Camel
camel.springboot.name = MyCamel

# to reconfigure the camel servlet context-path mapping to use /api/* instead of /camel/*
camel.component.servlet.mapping.context-path=/api/*



## H2 Embedded
#
##spring.main.sources=org.mycompany
#
#logging.config=classpath:logback.xml
#
## the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
#camel.springboot.name=MyCamel
#
## lets listen on all ports to ensure we can be invoked from the pod IP
#server.address=0.0.0.0
#management.address=0.0.0.0
#
## lets use a different management port in case you need to listen to HTTP requests on 8080
#management.port=8081
#
## disable all management endpoints except health
#endpoints.enabled = false
#endpoints.health.enabled = true
#
#spring.main.web-application-type=none
#camel.springboot.main-run-controller=true
#
##Database configuration
#spring.datasource.url = jdbc:h2:mem:mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.username = sa
#spring.datasource.password = 
#spring.datasource.driver-class-name = org.h2.Driver
#spring.datasource.platform = h2
#
#
## MySQL Local
#
#spring.main.sources=org.mycompany
#
#logging.config=classpath:logback.xml
#
## the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
#camel.springboot.name=MyCamel
#
## lets listen on all ports to ensure we can be invoked from the pod IP
#server.address=0.0.0.0
#management.address=0.0.0.0
#
## lets use a different management port in case you need to listen to HTTP requests on 8080
#management.port=8081
#
## disable all management endpoints except health
#endpoints.enabled = false
#endpoints.health.enabled = true
#
#spring.main.web-application-type=none
#camel.springboot.main-run-controller=true
#
##mysql specific
##mysql.service.name=mysql1
#mysql.service.host=localhost
#mysql.service.database=inventory
#mysql.service.username=root
#mysql.service.password=debezium
#mysql.service.port=33306
#mysql.service.driver=com.mysql.jdbc.Driver
#
##Database configuration
#spring.datasource.url = jdbc:mysql://${mysql.service.host}:${mysql.service.port}/${mysql.service.database}?useSSL=false
#spring.datasource.username = ${mysql.service.username}
#spring.datasource.password = ${mysql.service.password}
#spring.datasource.driver-class-name = ${mysql.service.driver}
#
#
# MySQL OpenShift

spring.main.sources=org.mycompany

logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=MyCamel

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081

# disable all management endpoints except health
endpoints.enabled = false
endpoints.health.enabled = true


spring.main.web-application-type=none
camel.springboot.main-run-controller=true


mysql.service.database=inventory
mysql.service.username=root
mysql.service.password=debezium
mysql.service.port=3306

## testing on OCP
#mysql.service.name=mysql1.rhte.svc
#mysql.service.port=3306

# testing locally with port forwarding to OCP MySQL
mysql.service.name=localhost
mysql.service.port=33306

#Database configuration
spring.datasource.url = jdbc:mysql://${mysql.service.name}:${mysql.service.port}/${mysql.service.database}?useSSL=false
spring.datasource.username = ${mysql.service.username}
spring.datasource.password = ${mysql.service.password}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver